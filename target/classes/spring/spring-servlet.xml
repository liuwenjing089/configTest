<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="  
        http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans-3.2.xsd  
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-3.2.xsd  
        http://www.springframework.org/schema/mvc 
        http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">


	<!--自动配置开启springMVC功能所需bean。 -->
	<mvc:annotation-driven />
	<!-- 设置应用Spring注解扫描的包路径， -->
	<context:component-scan base-package="com.andon.controller" />


	<!-- 设置注解验证数据 -->
	<bean id="validator"
		class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
		<property name="providerClass" value="org.hibernate.validator.HibernateValidator" />
		<!--不设置则默认为classpath下的 ValidationMessages.properties -->
		<!-- 经测试，无法修改此配置，必须用默认位置的properties文件。 -->
		<!-- <property name="validationMessageSource" ref="messageSource" /> -->
	</bean>
	<bean id="conversion-service"
		class="org.springframework.format.support.FormattingConversionServiceFactoryBean" />
	<!-- 默认的注解映射的支持 -->
	<mvc:annotation-driven validator="validator"
		conversion-service="conversion-service" />

	<!-- 避免IE执行AJAX时,返回JSON出现下载文件 -->
	<bean id="mappingJacksonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
			</list>
		</property>
	</bean>

	<!-- <mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/admin/**/*.do" />
			<mvc:exclude-mapping path="/admin/**/validateCode.do" />
			<mvc:exclude-mapping path="/admin/**/index.do" />
			<mvc:exclude-mapping path="/admin/**/login.do" />
			<bean class="com.haima.maintain.interceptor.mvc.SysLogInterceptor" />
		</mvc:interceptor>
	</mvc:interceptors>-->

	<!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="mappingJacksonHttpMessageConverter" /><!-- json转换器 -->
			</list>
		</property>
	</bean>


	<!-- 设置上传文件大小限制 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver"
		p:defaultEncoding="utf-8">
		<!-- 设置上传文件的最大尺寸为5MB -->
		<property name="maxUploadSize">
			<value>5048576</value>
		</property>
		<property name="resolveLazily" value="true" />
	</bean>
	
	
	
	<!-- 暴露RPC服务 -->
<!--     <bean id="orderService" class="com.haima.maintain.rpc.support.service.impl.OrderServiceImpl" />
    使用HessianServiceExporter 将普通bean导出成Hessian服务
    <bean name="/rpcService/orderService.do"
        class="org.springframework.remoting.caucho.HessianServiceExporter">
        <property name="service" ref="orderService" />
        Hessian服务的接口
        <property name="serviceInterface" value="com.haima.maintain.rpc.support.service.OrderService" />
    </bean> -->

</beans>  